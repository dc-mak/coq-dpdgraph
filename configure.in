#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#            This file is part of the DpdGraph tools.
#  Copyright (C) 2009-2015 Anne Pacalet (Anne.Pacalet@free.fr)
#                      and Yves Bertot (Yves.Bertot@inria.fr)
#                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#      This file is distributed under the terms of the 
#       GNU Lesser General Public License Version 2.1
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# the script generated by autoconf from this input will set the following
# variables:
#   OCAMLC        "ocamlc" if present in the path, or a failure
#                 or "ocamlc.opt" if present with same version number as ocamlc
#   OCAMLOPT      "ocamlopt" (or "ocamlopt.opt" if present), or "no"
#   OCAMLBEST     either "byte" if no native compiler was found,
#                 or "opt" otherwise
#   OCAMLFIND     "ocamlfind"
#   OCAMLDEP      "ocamldep"
#   OCAMLLEX      "ocamllex" (or "ocamllex.opt" if present)
#   OCAMLYACC     "ocamlyac"
#   OCAMLLIB      the path to the ocaml standard library
#   OCAMLVERSION  the ocaml version number
#   COQC          "coqc" if present in the path
#   BINDIR        the directory where coqc is present and where installation
#                 will occur
#   COQVERSION    the coq version number

# check for one particular file of the sources
# ADAPT THE FOLLOWING LINE TO YOUR SOURCES!
AC_INIT(graphdepend.ml4)

# Check for Ocaml compilers

# we first look for ocamlc in the path; if not present, we fail
AC_CHECK_PROG(OCAMLC,ocamlc,ocamlc,no)
if test "$OCAMLC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlc.)
fi

# we extract Ocaml version number and library path
OCAMLVERSION=`$OCAMLC -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
echo "ocaml version is $OCAMLVERSION"

case $OCAMLVERSION in
  0.*|1.*|2.*|3.*)
        AC_MSG_ERROR(dpdgraph needs ocaml version 4.00.0 or higher);;
  3.10*)
    NATIVE_DYNLINK=no;;
  *)
    NATIVE_DYNLINK=yes
	;;
esac

# OCAMLLIB=`$OCAMLC -v | tail -n 1 | cut -f 4 -d " "`
# OCAMLLIB=`$OCAMLC -v | tail -n 1 | sed -e 's|[[^:]]*: \(.*\)|\1|' `
OCAMLLIB=`$OCAMLC -where | tr -d '\r'`
echo "ocaml library path is $OCAMLLIB"

# then we look for ocamlopt; if not present, we issue a warning
# if the version is not the same, we also discard it
# we set OCAMLBEST to "opt" or "byte", whether ocamlopt is available or not
AC_CHECK_PROG(OCAMLOPT,ocamlopt,ocamlopt,no)
OCAMLBEST=byte
if test "$OCAMLOPT" = no ; then
	AC_MSG_WARN(Cannot find ocamlopt; bytecode compilation only.)
else
	AC_MSG_CHECKING(ocamlopt version)
	TMPVERSION=`$OCAMLOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlopt discarded.)
	    OCAMLOPT=no
	else
	    AC_MSG_RESULT(ok)
	    OCAMLBEST=opt
	fi
fi

# checking for ocamlc.opt
AC_CHECK_PROG(OCAMLCDOTOPT,ocamlc.opt,ocamlc.opt,no)
if test "$OCAMLCDOTOPT" != no ; then
	AC_MSG_CHECKING(ocamlc.opt version)
	TMPVERSION=`$OCAMLCDOTOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlc.opt discarded.)
	else
	    AC_MSG_RESULT(ok)
	    OCAMLC=$OCAMLCDOTOPT
	fi
fi

# checking for ocamlopt.opt
if test "$OCAMLOPT" != no ; then
    AC_CHECK_PROG(OCAMLOPTDOTOPT,ocamlopt.opt,ocamlopt.opt,no)
    if test "$OCAMLOPTDOTOPT" != no ; then
	AC_MSG_CHECKING(ocamlc.opt version)
	TMPVER=`$OCAMLOPTDOTOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
	if test "$TMPVER" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlopt.opt discarded.)
	else
	    AC_MSG_RESULT(ok)
	    OCAMLOPT=$OCAMLOPTDOTOPT
	fi
    fi
fi

# ocamldep, ocamllex and ocamlyacc should also be present in the path
AC_CHECK_PROG(OCAMLDEP,ocamldep,ocamldep,no)
if test "$OCAMLDEP" = no ; then
	AC_MSG_ERROR(Cannot find ocamldep.)
fi

AC_CHECK_PROG(OCAMLLEX,ocamllex,ocamllex,no)
if test "$OCAMLLEX" = no ; then
    AC_MSG_ERROR(Cannot find ocamllex.)
else
    AC_CHECK_PROG(OCAMLLEXDOTOPT,ocamllex.opt,ocamllex.opt,no)
    if test "$OCAMLLEXDOTOPT" != no ; then
	OCAMLLEX=$OCAMLLEXDOTOPT
    fi
fi

AC_CHECK_PROG(OCAMLYACC,ocamlyacc,ocamlyacc,no)
if test "$OCAMLYACC" = no ; then
	AC_MSG_ERROR(Cannot find ocamlyacc.)
fi

AC_CHECK_PROG(OCAMLDOC,ocamldoc,ocamldoc,true)
if test "$OCAMLDOC" = true ; then
    AC_MSG_WARN(Cannot find ocamldoc)
else
    AC_CHECK_PROG(OCAMLDOCOPT,ocamldoc.opt,ocamldoc.opt,no)
    if test "$OCAMLDOCOPT" != no ; then
	OCAMLDOC=$OCAMLDOCOPT
    fi
fi

AC_CHECK_PROG(OCAMLWEB,ocamlweb,ocamlweb,true)

AC_CHECK_PROG(OCAMLFIND,ocamlfind,ocamlfind)
if test "$OCAMLFIND" = "" ; then
   echo "No ocamlfind detected"
else
   OCAMLLIB_BY_FINDLIB=`ocamlfind printconf stdlib | tr -d '\\r'`
   if test "$OCAMLLIB_BY_FINDLIB" = "$OCAMLLIB" ; then
      echo "OCamlfind detected and enabled"
   else
      echo "OCamlfind detected but disabled. Standard libraries differ:"
      echo "  ocamlc: '$OCAMLLIB'"
      echo "  ocamlfind: '$OCAMLLIB_BY_FINDLIB'"
      OCAMLFIND=""
   fi
fi

if test "$OCAMLBEST" = "opt"; then
  SUFFIX=cmxa;
else
  SUFFIX=cma;
fi

# testing for ocamlgraph
AC_MSG_CHECKING(ocamlgraph package)

if test "$OCAMLFIND" = ""; then
  if test -f "$OCAMLLIB/ocamlgraph/graph.cmxa" ; then
    OCAMLGRAPH=yes
  else
    OCAMLGRAPH=no
  fi
  OCAMLGRAPH_PATH=+ocamlgraph
else
  OCAMLGRAPH_PATH=`ocamlfind query ocamlgraph | tr -d '\\r\\n'`
  if test "$OCAMLGRAPH_PATH" = "" ;then
     OCAMLGRAPH=no 
  fi
fi

if test "$OCAMLGRAPH" = no ; then
  AC_MSG_ERROR(ocamlgraph is not found.)
else
  AC_MSG_RESULT($OCAMLGRAPH_PATH)
fi

AC_CHECK_PROG(COQC,coqc,coqc,no)
if test "$COQC" = no ; then
	AC_MSG_ERROR(Cannot find coqc.)
fi

COQVERSION=`$COQC -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
echo "Coq version is $COQVERSION"

case $COQVERSION in
  8.1*|8.2*|8.3*|8.4*)
        AC_MSG_ERROR(dpdgraph needs Coq version 8.5 or higher);;
esac
BINDIR_PRE=`which coqc`
BINDIR=`dirname $BINDIR_PRE`
# substitutions to perform
AC_SUBST(OCAMLC)
AC_SUBST(OCAMLOPT)
AC_SUBST(OCAMLDEP)
AC_SUBST(OCAMLLEX)
AC_SUBST(OCAMLDOC)
AC_SUBST(OCAMLYACC)
AC_SUBST(OCAMLBEST)
AC_SUBST(OCAMLVERSION)
AC_SUBST(OCAMLLIB)
AC_SUBST(OCAMLWEB)
AC_SUBST(LABLGTK2)
AC_SUBST(LABLGNOMECANVAS)
AC_SUBST(OCAMLWIN32)
AC_SUBST(EXE)
AC_SUBST(LIBEXT)
AC_SUBST(OBJEXT)
AC_SUBST(INCLUDEGTK2)
AC_SUBST(NATIVE_DYNLINK)
AC_SUBST(COQC)
AC_SUBST(BINDIR)
AC_SUBST(OCAMLGRAPH_PATH)

# Finally create the Makefile from Makefile.in
AC_OUTPUT(Makefile)
# chmod a-w Makefile
